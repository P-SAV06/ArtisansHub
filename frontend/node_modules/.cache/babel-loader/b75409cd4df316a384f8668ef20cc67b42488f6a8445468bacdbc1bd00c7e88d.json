{"ast":null,"code":"// Indian Localization Utilities\n// Currency conversion and formatting for Indian users\n\nexport const CURRENCY_RATE_USD_TO_INR = 83.5; // Approximate rate as of 2025\n\n/**\r\n * Convert USD to Indian Rupees\r\n * @param {number} usdAmount - Amount in USD\r\n * @returns {number} - Amount in INR\r\n */\nexport const convertToINR = usdAmount => {\n  return Math.round(usdAmount * CURRENCY_RATE_USD_TO_INR);\n};\n\n/**\r\n * Format price in Indian Rupees with proper Indian formatting\r\n * @param {number} amount - Amount to format (can be USD or INR)\r\n * @param {boolean} convertFromUSD - Whether to convert from USD first\r\n * @returns {string} - Formatted price string\r\n */\nexport const formatINRPrice = (amount, convertFromUSD = true) => {\n  const inrAmount = convertFromUSD ? convertToINR(amount) : amount;\n\n  // Indian number formatting with proper comma placement\n  const formatter = new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  });\n\n  // Alternative format with \"Rs\" suffix for better Indian UX\n  const formattedNumber = new Intl.NumberFormat('en-IN').format(inrAmount);\n  return `₹${formattedNumber}`;\n};\n\n/**\r\n * Format price in simple INR format (e.g., \"299Rs\")\r\n * @param {number} amount - Amount to format\r\n * @param {boolean} convertFromUSD - Whether to convert from USD first\r\n * @returns {string} - Simple formatted price\r\n */\nexport const formatSimpleINR = (amount, convertFromUSD = true) => {\n  const inrAmount = convertFromUSD ? convertToINR(amount) : amount;\n  return `${inrAmount}Rs`;\n};\n\n/**\r\n * Indian design color schemes and gradients\r\n */\nexport const INDIAN_COLORS = {\n  saffron: 'from-orange-500 to-red-500',\n  green: 'from-green-600 to-emerald-600',\n  navy: 'from-blue-800 to-indigo-900',\n  heritage: 'from-amber-600 to-orange-700',\n  royal: 'from-purple-700 to-pink-600',\n  earth: 'from-yellow-700 to-red-800',\n  peacock: 'from-teal-600 to-blue-700'\n};\n\n/**\r\n * Indian cultural icons and emojis\r\n */\nexport const INDIAN_ICONS = {\n  namaste: '🙏',\n  lotus: '🪷',\n  om: 'ॐ',\n  diya: '🪔',\n  temple: '🛕',\n  elephant: '🐘',\n  peacock: '🦚',\n  tabla: '🥁',\n  sitar: '🪕'\n};\n\n/**\r\n * Hindi translations for common UI elements\r\n */\nexport const HINDI_TRANSLATIONS = {\n  'Welcome': 'स्वागत है',\n  'Home': 'घर',\n  'About': 'के बारे में',\n  'Sell': 'बेचें',\n  'Buy': 'खरीदें',\n  'Cart': 'कार्ट',\n  'Price': 'कीमत',\n  'Artist': 'कलाकार',\n  'Handicraft': 'हस्तशिल्प',\n  'Traditional': 'पारंपरिक',\n  'Search': 'खोज',\n  'Categories': 'श्रेणियाँ',\n  'Wooden Dolls': 'लकड़ी की गुड़ियाँ',\n  'Handlooms': 'हथकरघा',\n  'Basket Weaving': 'टोकरी बुनाई',\n  'Pottery': 'मिट्टी के बर्तन',\n  'Add to Cart': 'कार्ट में डालें',\n  'My Artist Friend': 'मेरा कलाकार मित्र',\n  'Back to Home': 'घर वापस जाएं'\n};\n\n/**\r\n * Get greeting based on time of day in Hindi and English\r\n */\nexport const getIndianGreeting = () => {\n  const hour = new Date().getHours();\n  if (hour < 12) {\n    return {\n      en: 'Good Morning',\n      hi: 'सुप्रभात',\n      emoji: '🌅'\n    };\n  } else if (hour < 17) {\n    return {\n      en: 'Good Afternoon',\n      hi: 'नमस्कार',\n      emoji: '☀️'\n    };\n  } else {\n    return {\n      en: 'Good Evening',\n      hi: 'शुभ संध्या',\n      emoji: '🌆'\n    };\n  }\n};\n\n/**\r\n * Indian state names and their craft specialties\r\n */\nexport const INDIAN_CRAFT_REGIONS = {\n  'Rajasthan': ['Wooden Dolls', 'Pottery', 'Handlooms'],\n  'Gujarat': ['Handlooms', 'Basket Weaving'],\n  'Uttar Pradesh': ['Wooden Dolls', 'Pottery'],\n  'Tamil Nadu': ['Handlooms', 'Pottery'],\n  'Punjab': ['Handlooms', 'Basket Weaving'],\n  'Maharashtra': ['Pottery', 'Handlooms'],\n  'West Bengal': ['Handlooms', 'Pottery'],\n  'Odisha': ['Handlooms', 'Wooden Dolls'],\n  'Karnataka': ['Pottery', 'Basket Weaving']\n};\nexport default {\n  convertToINR,\n  formatINRPrice,\n  formatSimpleINR,\n  INDIAN_COLORS,\n  INDIAN_ICONS,\n  HINDI_TRANSLATIONS,\n  getIndianGreeting,\n  INDIAN_CRAFT_REGIONS\n};","map":{"version":3,"names":["CURRENCY_RATE_USD_TO_INR","convertToINR","usdAmount","Math","round","formatINRPrice","amount","convertFromUSD","inrAmount","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","formattedNumber","format","formatSimpleINR","INDIAN_COLORS","saffron","green","navy","heritage","royal","earth","peacock","INDIAN_ICONS","namaste","lotus","om","diya","temple","elephant","tabla","sitar","HINDI_TRANSLATIONS","getIndianGreeting","hour","Date","getHours","en","hi","emoji","INDIAN_CRAFT_REGIONS"],"sources":["C:/Users/varma/New folder (3)/frontend/src/utils/indianLocalization.js"],"sourcesContent":["// Indian Localization Utilities\r\n// Currency conversion and formatting for Indian users\r\n\r\nexport const CURRENCY_RATE_USD_TO_INR = 83.5; // Approximate rate as of 2025\r\n\r\n/**\r\n * Convert USD to Indian Rupees\r\n * @param {number} usdAmount - Amount in USD\r\n * @returns {number} - Amount in INR\r\n */\r\nexport const convertToINR = (usdAmount) => {\r\n  return Math.round(usdAmount * CURRENCY_RATE_USD_TO_INR);\r\n};\r\n\r\n/**\r\n * Format price in Indian Rupees with proper Indian formatting\r\n * @param {number} amount - Amount to format (can be USD or INR)\r\n * @param {boolean} convertFromUSD - Whether to convert from USD first\r\n * @returns {string} - Formatted price string\r\n */\r\nexport const formatINRPrice = (amount, convertFromUSD = true) => {\r\n  const inrAmount = convertFromUSD ? convertToINR(amount) : amount;\r\n  \r\n  // Indian number formatting with proper comma placement\r\n  const formatter = new Intl.NumberFormat('en-IN', {\r\n    style: 'currency',\r\n    currency: 'INR',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0\r\n  });\r\n  \r\n  // Alternative format with \"Rs\" suffix for better Indian UX\r\n  const formattedNumber = new Intl.NumberFormat('en-IN').format(inrAmount);\r\n  return `₹${formattedNumber}`;\r\n};\r\n\r\n/**\r\n * Format price in simple INR format (e.g., \"299Rs\")\r\n * @param {number} amount - Amount to format\r\n * @param {boolean} convertFromUSD - Whether to convert from USD first\r\n * @returns {string} - Simple formatted price\r\n */\r\nexport const formatSimpleINR = (amount, convertFromUSD = true) => {\r\n  const inrAmount = convertFromUSD ? convertToINR(amount) : amount;\r\n  return `${inrAmount}Rs`;\r\n};\r\n\r\n/**\r\n * Indian design color schemes and gradients\r\n */\r\nexport const INDIAN_COLORS = {\r\n  saffron: 'from-orange-500 to-red-500',\r\n  green: 'from-green-600 to-emerald-600', \r\n  navy: 'from-blue-800 to-indigo-900',\r\n  heritage: 'from-amber-600 to-orange-700',\r\n  royal: 'from-purple-700 to-pink-600',\r\n  earth: 'from-yellow-700 to-red-800',\r\n  peacock: 'from-teal-600 to-blue-700'\r\n};\r\n\r\n/**\r\n * Indian cultural icons and emojis\r\n */\r\nexport const INDIAN_ICONS = {\r\n  namaste: '🙏',\r\n  lotus: '🪷',\r\n  om: 'ॐ',\r\n  diya: '🪔',\r\n  temple: '🛕',\r\n  elephant: '🐘',\r\n  peacock: '🦚',\r\n  tabla: '🥁',\r\n  sitar: '🪕'\r\n};\r\n\r\n/**\r\n * Hindi translations for common UI elements\r\n */\r\nexport const HINDI_TRANSLATIONS = {\r\n  'Welcome': 'स्वागत है',\r\n  'Home': 'घर',\r\n  'About': 'के बारे में',\r\n  'Sell': 'बेचें',\r\n  'Buy': 'खरीदें',\r\n  'Cart': 'कार्ट',\r\n  'Price': 'कीमत',\r\n  'Artist': 'कलाकार',\r\n  'Handicraft': 'हस्तशिल्प',\r\n  'Traditional': 'पारंपरिक',\r\n  'Search': 'खोज',\r\n  'Categories': 'श्रेणियाँ',\r\n  'Wooden Dolls': 'लकड़ी की गुड़ियाँ',\r\n  'Handlooms': 'हथकरघा',\r\n  'Basket Weaving': 'टोकरी बुनाई',\r\n  'Pottery': 'मिट्टी के बर्तन',\r\n  'Add to Cart': 'कार्ट में डालें',\r\n  'My Artist Friend': 'मेरा कलाकार मित्र',\r\n  'Back to Home': 'घर वापस जाएं'\r\n};\r\n\r\n/**\r\n * Get greeting based on time of day in Hindi and English\r\n */\r\nexport const getIndianGreeting = () => {\r\n  const hour = new Date().getHours();\r\n  if (hour < 12) {\r\n    return { en: 'Good Morning', hi: 'सुप्रभात', emoji: '🌅' };\r\n  } else if (hour < 17) {\r\n    return { en: 'Good Afternoon', hi: 'नमस्कार', emoji: '☀️' };\r\n  } else {\r\n    return { en: 'Good Evening', hi: 'शुभ संध्या', emoji: '🌆' };\r\n  }\r\n};\r\n\r\n/**\r\n * Indian state names and their craft specialties\r\n */\r\nexport const INDIAN_CRAFT_REGIONS = {\r\n  'Rajasthan': ['Wooden Dolls', 'Pottery', 'Handlooms'],\r\n  'Gujarat': ['Handlooms', 'Basket Weaving'],\r\n  'Uttar Pradesh': ['Wooden Dolls', 'Pottery'],\r\n  'Tamil Nadu': ['Handlooms', 'Pottery'],\r\n  'Punjab': ['Handlooms', 'Basket Weaving'],\r\n  'Maharashtra': ['Pottery', 'Handlooms'],\r\n  'West Bengal': ['Handlooms', 'Pottery'],\r\n  'Odisha': ['Handlooms', 'Wooden Dolls'],\r\n  'Karnataka': ['Pottery', 'Basket Weaving']\r\n};\r\n\r\nexport default {\r\n  convertToINR,\r\n  formatINRPrice,\r\n  formatSimpleINR,\r\n  INDIAN_COLORS,\r\n  INDIAN_ICONS,\r\n  HINDI_TRANSLATIONS,\r\n  getIndianGreeting,\r\n  INDIAN_CRAFT_REGIONS\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}